// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PlainRentRow> matches snapshot 1`] = `
<PlainRentRow
  timeState={
    Object {
      "SSDI": 0,
      "SSI": 0,
      "TAFDC": 0,
      "adultDirectCare": 0,
      "adultOtherCare": 0,
      "adultTransportation": 0,
      "alimony": 0,
      "childBeforeAndAfterSchoolCare": 0,
      "childDirectCare": 0,
      "childOtherCare": 0,
      "childSupportIn": 0,
      "childSupportPaidOut": 0,
      "childTransportation": 0,
      "climateControl": false,
      "contractRent": 0,
      "disabledAssistance": 0,
      "disabledMedical": 0,
      "earned": 0,
      "earnedBecauseOfAdultCare": 0,
      "earnedBecauseOfChildCare": 0,
      "fuelAssistance": false,
      "hasSection8": false,
      "hasSnap": false,
      "household": Array [
        Object {
          "m_age": 30,
          "m_disabled": false,
          "m_role": "head",
        },
      ],
      "housing": "homeless",
      "housingInsurance": 0,
      "mortgage": 0,
      "nonHeatElectricity": false,
      "otherExpensesCable": 0,
      "otherExpensesCareProducts": 0,
      "otherExpensesClothes": 0,
      "otherExpensesEntertainment": 0,
      "otherExpensesFood": 0,
      "otherExpensesMedical": 0,
      "otherExpensesOther": 0,
      "otherExpensesPhone": 0,
      "otherExpensesTransport": 0,
      "otherExpensesUtilities": 0,
      "otherIncome": 0,
      "otherMedical": 0,
      "pension": 0,
      "phone": false,
      "propertyTax": 0,
      "rent": 0,
      "rentShare": 0,
      "socialSecurity": 0,
      "unemployment": 0,
      "wantsToSeeOtherExpenses": false,
      "workersComp": 0,
    }
  }
  updateClientValue={[Function]}
>
  <MonthlyCashFlowRow
    baseValue={0}
    includes={
      Array [
        "monthly",
      ]
    }
    inputProps={
      Object {
        "displayValidator": [Function],
        "name": "rent",
        "onBlur": [Function],
        "storeValidator": [Function],
      }
    }
    rowProps={
      Object {
        "label": "Monthly Rent",
        "message": null,
        "validRow": true,
      }
    }
    updateClientValue={[Function]}
  >
    <CashFlowContainer
      label="Monthly Rent"
      message={null}
      validRow={true}
    >
      <FormField
        className="cashflow"
        inline={true}
      >
        <div
          className="inline field cashflow"
        >
          <ManagedNumberField
            className="cashflow-column"
            displayValidator={[Function]}
            format={[Function]}
            name="rent"
            onBlur={[Function]}
            otherData={
              Object {
                "interval": "monthly",
              }
            }
            store={[Function]}
            storeValidator={[Function]}
            value={0}
          >
            <FormInput
              as={[Function]}
              className="cashflow-column output-number"
              control={[Function]}
              error={false}
              name="rent"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              value="0.00"
            >
              <FormField
                className="cashflow-column output-number"
                control={[Function]}
                error={false}
                name="rent"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                value="0.00"
              >
                <div
                  className="field cashflow-column output-number"
                >
                  <Input
                    name="rent"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="text"
                    value="0.00"
                  >
                    <div
                      className="ui input"
                    >
                      <input
                        key="text"
                        name="rent"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        type="text"
                        value="0.00"
                      />
                    </div>
                  </Input>
                </div>
              </FormField>
            </FormInput>
          </ManagedNumberField>
          <div
            className="cashflow-column cashflow-column-last-child"
          >
            <label>
              Monthly Rent
            </label>
          </div>
          <InvalidMessage
            message={null}
            validRow={true}
          />
        </div>
      </FormField>
    </CashFlowContainer>
  </MonthlyCashFlowRow>
</PlainRentRow>
`;
